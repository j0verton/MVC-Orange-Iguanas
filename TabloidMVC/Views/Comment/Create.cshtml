@model TabloidMVC.Models.ViewModels.CommentCreateViewModel

@{
    ViewData["Title"] = "Create";
}
<div class="container pt-5">
<h1>Add Comment</h1>

    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input type="hidden" asp-for="NewComment.PostId" class="form-control" value="@Model.ParentPost.Id" />
                </div>
                <div class="form-group">
                    <input type="hidden" asp-for="NewComment.UserProfileId" class="form-control" value="@Model.UserId" />
                </div>
                <div class="form-group">
                    <label asp-for="NewComment.Subject" class="control-label"></label>
                    <input asp-for="NewComment.Subject" class="form-control" required />
                    <span asp-validation-for="NewComment.Subject" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NewComment.Content" class="control-label">Comment</label>
                    <input asp-for="NewComment.Content" class="form-control" required />
                    <span asp-validation-for="NewComment.Content" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    <a class="btn btn-primary" asp-action="Index" asp-route-id="@Model.ParentPost.Id">Go back to comments</a>
                </div>
            </form>
        </div>
    </div>
    </div>



    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
